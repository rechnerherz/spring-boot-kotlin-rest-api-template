######################################
# Development application properties #
######################################

# Datasource
spring.datasource.url=jdbc:mariadb://localhost:3306/example?useSSL=false
spring.datasource.username=example
spring.datasource.password=example

# Don't run Liquibase on startup
spring.liquibase.enabled=false

# Local MailDev SMTP server
#spring.mail.test-connection=true
spring.mail.host=localhost
spring.mail.port=3025

# Embedded web server port
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-web-servers.html#howto-change-the-http-port
server.port=8443

# Enable SSL for the embedded web server
# https://docs.spring.io/spring-boot/docs/current/reference/html/howto-embedded-web-servers.html#howto-configure-ssl
server.ssl.enabled=true
server.ssl.key-store=classpath:dev/localhost+2.p12
server.ssl.key-store-type=PKCS12
server.ssl.key-store-password=changeit

# Prevent restarting on build project
spring.devtools.restart.enabled=false

# Allow logging request details
spring.mvc.log-request-details=true

# Enable color output
spring.output.ansi.enabled=always

###########
# Logging #
###########

# Our debug messages
logging.level.at.rechnerherz.example=debug

# Enable AOP profiling
at.rechnerherz.aoprofiling.enabled=true

# AOP profiling log levels
logging.level.at.rechnerherz.aoprofiling.ProfilingAspect=trace
logging.level.at.rechnerherz.aoprofiling.ProfilingSummaryAspect=debug

# Event listeners for application events, handled HTTP requests, HTTP session events and servlet context events
logging.level.at.rechnerherz.example.config.listeners.ApplicationEventListeners=trace
logging.level.at.rechnerherz.example.config.listeners.HttpRequestEventListener=trace
logging.level.at.rechnerherz.example.config.listeners.HttpSessionWebListener=trace
logging.level.at.rechnerherz.example.config.listeners.ServletContextWebListener=trace

# ---

# Spring Boot auto-configuration report
#logging.level.org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener=debug

# Spring info messages
#logging.level.org.springframework=info

# Transactional method configuration
#logging.level.org.springframework.transaction=debug

# Transactions in action
#logging.level.org.springframework.transaction.interceptor.TransactionInterceptor=trace
#logging.level.org.springframework.orm.jpa.JpaTransactionManager=debug

# JPA auditing
#logging.level.org.springframework.data.auditing.AuditingHandler=debug

# Spring SQL log groups
# https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#boot-features-custom-log-groups
#logging.level.sql=debug
#logging.level.web=debug

# ---

# Hibernate
# http://docs.jboss.org/hibernate/orm/current/userguide/html_single/Hibernate_User_Guide.html#configurations-logging
# http://docs.jboss.org/hibernate/orm/current/userguide/html_single/Hibernate_User_Guide.html#best-practices-logging

# Write all SQL statements to the console. This is an alternative to setting the log category org.hibernate.SQL to debug.
#spring.jpa.show-sql=true

# Pretty-print the SQL in the log and console.
#spring.jpa.properties.hibernate.format_sql=true

# If true, Hibernate generates comments inside the SQL, for easier debugging.
#spring.jpa.properties.hibernate.use_sql_comments=true

# Causes Hibernate to collect statistics for performance tuning.
#spring.jpa.properties.hibernate.generate_statistics=true

# Log just the SQL
#logging.level.org.hibernate.SQL=debug

# Log JDBC bind parameters
#logging.level.org.hibernate.type=trace
#logging.level.org.hibernate.type.descriptor.sql=trace

# ---

# Hikari connection pool stats
#logging.level.com.zaxxer.hikari=debug

# Apache HttpClient request/response
#logging.level.org.apache.http.wire=debug

#####################
# Custom Properties #
#####################

# Base URLs
at.rechnerherz.example.base.backend-url=https://localhost:8443/
at.rechnerherz.example.base.frontend-url=https://localhost:3000/
at.rechnerherz.example.base.cors-allowed-origins=https://localhost:3000

# Logback mail
at.rechnerherz.example.logback.mail.enabled=true
at.rechnerherz.example.logback.mail.level=ERROR
at.rechnerherz.example.logback.mail.from-address=test@example.com
at.rechnerherz.example.logback.mail.from-personal=example-development
at.rechnerherz.example.logback.mail.to-address=test@example.com
at.rechnerherz.example.logback.mail.to-personal=example-development

# Logback Slack
at.rechnerherz.example.logback.slack.enabled=false
at.rechnerherz.example.logback.slack.webhook=https://hooks.slack.com/services/TXXXXXXXX/BXXXXXXXX/XXXXXXXXXXXXXXXXXXXXXXXX
at.rechnerherz.example.logback.slack.channel=#notifications
at.rechnerherz.example.logback.slack.username=example-development
at.rechnerherz.example.logback.slack.icon=:boom:

# Mail service
at.rechnerherz.example.mail.enabled=true
at.rechnerherz.example.mail.debug-bcc=true
at.rechnerherz.example.mail.debug-mode=true
at.rechnerherz.example.mail.debug-address=test@example.com
at.rechnerherz.example.mail.debug-personal=example-development
at.rechnerherz.example.mail.from-address=test@example.com
at.rechnerherz.example.mail.from-personal=example-development

# Base directory
at.rechnerherz.example.base.directory=file:${HOME}/.example/example-api/

# Populate fake test data
at.rechnerherz.example.base.populate-test-data=true
